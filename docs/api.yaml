openapi: 3.0.2
info:
  title: MLIR pank
  version: 1.0.0
  description: Marko Leht Indrek Rünkaru Pank
  contact:
    name: Marko Leht Indrek Rünkaru Pank
    email: marko.leht@khk.ee
servers:
  -
    url: 'http://localhost:8008'
    description: Development Server
  paths:
    /api/user/register:
      description: ''
      post:
        requestBody:
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postUsersRequest'
          required: true
        servers:
          - url: 'http://localhost:8008'
            description: Development server
        tags:
          - User
        responses:
          '201':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/postUsersRequest'
                examples:
                  userCreated:
                    value:
                      message: User saved
            description: User saved
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errorResponse'
                examples:
                  userAlreadyExists:
                    value: '{error: "All fields must be filled"}'
                  passwordLenght:
                    value:
                      error: Password length must be 8 or more characters
            description: All fields must be filled
          '409':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errorResponse'
                examples:
                  usernameAlreadyExists:
                    value: '{error: "Username already exists"}'
            description: Username already exists
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errorResponse'
                examples:
                  oopsSomethingWentWrong:
                    value:
                      error: Oops! Something went wrong
            description: Oops! Something went wrong
        summary: Register a new user
        description: Register a new user
    /api/session/create-session:
      post:
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postSessionRequest'
          required: true
        tags:
          - Session
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/postSessionResponse'
                examples:
                  tokenHasBeenCreated:
                    value:
                      token: 5f9db108b8c28c40a42d94c4
            description: ''
          '400':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/postSessionResponse'
                examples:
                  userAndPwRequired:
                    value:
                      error: Username and password required
                  invalidUsernameOrPassword:
                    value:
                      error: Invalid username or password
            description: Invalid username or password
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/postSessionResponse'
                examples:
                  oopsSomethingWentWrong:
                    value:
                      error: Oops! Something went wrong
            description: Oops! Something went wrong
        description: Create session token
    /api/session/delete-session:
      delete:
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteSessionRequest'
          required: true
        tags:
          - Session
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/postSessionResponse'
                examples:
                  deleteToken:
                    value:
                      message: Token successfully deleted
            description: Deleted token
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errorResponse'
                examples:
                  missingAuthorizationHeader:
                    value:
                      error: Missing Authorization header
                  invalidHeaderFormat:
                    value:
                      error: Invalid Authorization header format
                  invalidToken:
                    value:
                      error: Invalid token
                  invalidMongooseToken:
                    value:
                      error: Invalid token
            description: Missing token
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errorResponse'
                examples:
                  sessionNotFound:
                    value:
                      error: Session not found
            description: Not found
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errorResponse'
                examples:
                  oopsSomethingWentWrong:
                    value:
                      error: Oops! Something went wrong
            description: Server error
        security:
          - Bearer: [ ]
        description: Delete session token
    /api/accounts/current-user-account:
      get:
        tags:
          - Account
        responses:
          '200':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/successfulResponse'
                examples:
                  successfulResponse:
                    value:
                      name: Marko Leht
                      username: Marko
                      account:
                        - account_number: EE2650749058303131
                          balance: 50
                          currency: EUR
            description: Account information
          '401':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errorResponse'
                examples:
                  missingAuthorizationHeader:
                    value:
                      error: Missing Authorization header
                  invalidHeaderFormat:
                    value:
                      error: Invalid Authorization header format
                  invalidToken:
                    value: "\t{\"error\":\"Invalid token\"}"
                  invalidMongooseToken:
                    value:
                      error: Invalid token
            description: |
              Missing token
          '404':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errorResponse'
                examples:
                  accountNotFound:
                    value:
                      error: Account not found
                  userNotFound:
                    value:
                      error: User not found
            description: Not found
          '500':
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/errorResponse'
                examples:
                  oopsSomethingWentWrong:
                    value:
                      error: Oops! Something went wrong
            description: Server error
        security:
          - Bearer: [ ]
            - /api/transactions/create-transactions:
                post:
                  requestBody:
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/postTransactionRequest'
                        examples:
                          createTransaction:
                            value:
                              accountTo: 7da3851546037313641
                              explanation: raha
                              amount: 50
                    required: true
                  tags:
                    - Transactions
                  responses:
                    '201':
                      content:
                        application/json:
                          schema:
                            $ref: '#/components/schemas/successfulTransaction'
                          examples:
                            transactionSuccessful:
                              value:
                                message: Transaction created successfully
                      description: Transaction created
                    '400':
                      content:
                        application/json:
                          schema:
                            $ref: '#/components/schemas/errorResponse'
                          examples:
                            invalidAmount:
                              value:
                                error: Invalid amount
                            invalidAccountTo:
                              value:
                                error: Invalid accountTo
                      description: Invalid amount
                    '401':
                      content:
                        application/json:
                          schema:
                            $ref: '#/components/schemas/errorResponse'
                          examples:
                            missingAuthorizationHeader:
                              value:
                                error: Missing Authorization header
                      description: Missing token
                    '402':
                      content:
                        application/json:
                          schema:
                            $ref: '#/components/schemas/errorResponse'
                          examples:
                            insufficentFunds:
                              value:
                                error: Insufficient funds
                      description: Insufficent funds
                  security:
                    - Bearer: [ ]
                  description: Transactions API
  components:
    schemas:
      postUsersRequest:
        description: ''
        required:
          - name
          - password
          - username
        type: object
        properties:
          name:
            description: Full name
            type: string
          password:
            description: Minimum 8 characters
            type: string
          username:
            description: ''
            type: string
        example:
          name: some text
          password: some text
          username: some text
      errorResponse:
        title: Error response
        description: Generic error response
        required:
          - missingAuthorizationHeader
          - error
          - invalidHeaderFormat
          - invalidToken
          - invalidMongooseToken
          - insufficentFunds
          - invalidAmount
          - invalidAccountTo
          - cannotTransferToYourself
        type: object
        properties:
          error:
            description: Error response
            type: string
          missingAuthorizationHeader:
            description: '{"error":"Missing Authorization header"}'
            type: string
          invalidHeaderFormat:
            description: "\t{\"error\":\"Invalid Authorization header format\"}"
            type: string
          invalidToken:
            description: '{"error":"Invalid token"}'
            type: string
          invalidMongooseToken:
            description: '{"error":"Invalid token"}'
            type: string
            insufficentFunds:
              description: '{ "error": ''Insufficient funds'' }'
              type: string
            invalidAmount:
              description: '{ "error": ''Invalid amount'' }'
              type: string
            invalidAccountTo:
              description: '{ "error": ''Invalid accountTo'' }'
              type: string
            cannotTransferToYourself:
              description: '{"error": "You cannot transfer to yourself"}'
              type: string
        example:
          error: Error message
      postSessionResponse:
        description: ''
        type: object
        example:
          token: 5f9db108b8c28c40a42d94c4
      postSessionRequest:
        description: ''
        required:
          - username
          - password
        type: object
        properties:
          username:
            description: ''
            type: string
          password:
            description: ''
            type: string
        example:
          username: some text
          password: some text
      deleteSessionRequest:
        description: ''
        type: object
        example: { }
      deleteSessionResponse:
        description: ''
        type: object
        example:
          message: Token successfully deleted
      successfulResponse:
        description: ''
        required:
          - successful
        type: object
        properties:
          successful:
            description: Successful response
            type: string
        example:
          name: Marko Leht
          username: Marko
          account:
            - account_number: EE2650749058303131
              balance: 50
              currency: EUR
    postTransactionRequest:
      description: ''
      required:
        - accountTo
        - amount
        - explanation
      type: object
      properties:
        accountTo:
          description: Reciever
          type: string
        explanation:
          description: Transaction explanation
          type: string
        amount:
          description: Fund amount
          type: integer
      example:
        accountTo: 7da3851546037313641
        explanation: raha
        amount: 50
      successfulTransaction:
        title: Root Type for successfulTransaction
        description: ''
        type: object
        properties:
          message:
            description: Success message
            type: string
        example:
          message: Transaction created successfully
    securitySchemes:
      Bearer:
        scheme: bearer
        type: http